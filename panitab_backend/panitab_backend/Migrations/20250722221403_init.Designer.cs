// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using panitab_backend.Database;

#nullable disable

namespace panitab_backend.Migrations
{
    [DbContext(typeof(PaniTabContext))]
    [Migration("20250722221403_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Security")
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("roles", "Security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("roles_claims", "Security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("user_claims", "Security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("users_logins", "Security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("user_roles", "Security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("users_tokens", "Security");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.CustomerAssistantEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("AssistantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("assistant_name");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("customer_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("customer_assistant", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.CustomerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("identity_number");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone_number");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("IdentityNumber")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.HasIndex("PhoneNumber");

                    b.ToTable("customer", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.OrderDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("BreadClassId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bread_class_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("unit_price");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("BreadClassId");

                    b.HasIndex("OrderId", "BreadClassId");

                    b.ToTable("order_detail", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.OrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid?>("AssistantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("assistant_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("customer_id");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit")
                        .HasColumnName("is_paid");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_date");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("order_number");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("order_type");

                    b.Property<decimal>("OutstandingBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("outstanding_balance");

                    b.Property<Guid?>("ParentOrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("parent_order_id");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_amount");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("AssistantId");

                    b.HasIndex("IsPaid");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.HasIndex("ParentOrderId");

                    b.HasIndex("CustomerId", "OrderDate");

                    b.ToTable("order", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.SupplierEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("contact");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("Phone");

                    b.ToTable("supplier", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.SupplierPaymentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<decimal>("AmountPaid")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount_paid");

                    b.Property<decimal>("BalanceRemaining")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance_remaining");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("payment_date");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payment_method");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("supplier_id");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("PaymentDate");

                    b.HasIndex("SupplierId");

                    b.ToTable("supplier_payment", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Packer.PackerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("identity_number");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("IdentityNumber")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.ToTable("packer", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Packer.PackerPaymentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<decimal>("AmountPaid")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount_paid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("LastPackingPaid")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("last_packing_paid");

                    b.Property<Guid>("PackerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("packer_id");

                    b.Property<bool>("PaymentCompleted")
                        .HasMaxLength(20)
                        .HasColumnType("bit")
                        .HasColumnName("payment_completed");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("payment_date");

                    b.Property<int>("TotalBagsPacked")
                        .HasColumnType("int")
                        .HasColumnName("total_bags_packed");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("PackerId");

                    b.HasIndex("PaymentDate");

                    b.ToTable("packer_payment", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Packer.PackingDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("BreadClassId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bread_class_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("DamagedInPacking")
                        .HasColumnType("int")
                        .HasColumnName("damaged_in_packing");

                    b.Property<string>("DescriptionDamaged")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description_damaged");

                    b.Property<int>("Difference")
                        .HasColumnType("int")
                        .HasColumnName("difference");

                    b.Property<Guid>("PackingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("packing_id");

                    b.Property<Guid>("ProductionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("production_id");

                    b.Property<int>("TotalPacked")
                        .HasColumnType("int")
                        .HasColumnName("total_packed");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("BreadClassId");

                    b.HasIndex("ProductionId");

                    b.HasIndex("PackingId", "BreadClassId");

                    b.ToTable("packing_detail", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Packer.PackingEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<Guid?>("PackerEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PackingDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("packing_date");

                    b.Property<string>("PackingNumer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("packing_number");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("PackerEntityId");

                    b.HasIndex("PackingDate");

                    b.HasIndex("PackingNumer")
                        .IsUnique();

                    b.ToTable("packing", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Packer.PackingPackerEntity", b =>
                {
                    b.Property<Guid>("PackingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("packing_id");

                    b.Property<Guid>("PackerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("packer_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid?>("PackingDetailEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("PackingId", "PackerId");

                    b.HasIndex("PackerId");

                    b.HasIndex("PackingDetailEntityId");

                    b.ToTable("packing_packer", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.BakerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("identity_number");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("IdentityNumber")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.ToTable("baker", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.BakerPaymentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<decimal>("AmountPaid")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount_paid");

                    b.Property<Guid>("BakerId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("baker_id");

                    b.Property<decimal>("BalanceAdjustment")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance_adjustment");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("LastProductionPaid")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("last_production_paid");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("payment_date");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("payment_status");

                    b.Property<decimal>("TotalOfQuintal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_arrobas");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("BakerId");

                    b.HasIndex("PaymentDate");

                    b.ToTable("baker_payment", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.BreadClassEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("BreadsPerBag")
                        .HasColumnType("int")
                        .HasColumnName("breads_per_bag");

                    b.Property<decimal>("BreadsPerTray")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("breads_per_tray");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<decimal>("CustomerPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("customer_price");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("PackagingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("packaging_price");

                    b.Property<decimal>("PricePerQuintal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price_per_quintal");

                    b.Property<decimal>("PublicPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("public_price");

                    b.Property<decimal>("TraysPerQuintal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("trays_per_quintal");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("IsActive");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("bread_class", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.BreadClassMaterialEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("BreadClassId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bread_class_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("material_id");

                    b.Property<string>("MeasureUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("measure_unit");

                    b.Property<decimal>("QuantityUsed")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("quantity_used");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("BreadClassId");

                    b.HasIndex("MaterialId");

                    b.ToTable("bread_class_materials", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.MaterialEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<decimal>("CurrentStock")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("current_stock");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("MeasureUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("measure_unit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("IsActive");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("material", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.MaterialPurchaseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("material_id");

                    b.Property<string>("MeasureUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("measure_unit");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("purchase_date");

                    b.Property<string>("PurchaseStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("purchase_status");

                    b.Property<decimal>("QuantityPurchased")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("quantity_purchased");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("supplier_id");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("unit_price");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PurchaseDate");

                    b.HasIndex("SupplierId");

                    b.ToTable("material_purchase", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.ProductionDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("BakerId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("baker_id");

                    b.Property<Guid>("BreadClassId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bread_class_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("Difference")
                        .HasColumnType("int")
                        .HasColumnName("difference");

                    b.Property<Guid>("ProductionId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("production_id");

                    b.Property<int>("QuantityLatas")
                        .HasColumnType("int")
                        .HasColumnName("quantity_latas");

                    b.Property<int>("QuantityQuintal")
                        .HasColumnType("int")
                        .HasColumnName("quantity_arrobas");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("production_status");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("BakerId");

                    b.HasIndex("BreadClassId");

                    b.HasIndex("ProductionId", "BreadClassId");

                    b.ToTable("production_detail", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.ProductionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("production_date");

                    b.Property<string>("ProductionNumber")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("production_number");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("ProductionDate");

                    b.HasIndex("ProductionNumber")
                        .IsUnique();

                    b.ToTable("production", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.UnitConversionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<decimal>("ConversionFactor")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("conversion_factor");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("FromUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("from_unit");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("material_id");

                    b.Property<string>("ToUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("to_unit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("unit_conversion", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("last_name");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("refresh_token");

                    b.Property<DateTime>("RefreshTokenExpire")
                        .HasColumnType("datetime2")
                        .HasColumnName("refresh_token_expire");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("users", "Security");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Warehouse.WarehouseControlDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("Adjustments")
                        .HasColumnType("int")
                        .HasColumnName("adjustments");

                    b.Property<Guid>("BreadClassId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bread_class_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("DamagedStock")
                        .HasColumnType("int")
                        .HasColumnName("damaged_stock");

                    b.Property<int>("Difference")
                        .HasColumnType("int")
                        .HasColumnName("difference");

                    b.Property<int?>("Excess")
                        .HasColumnType("int")
                        .HasColumnName("excess");

                    b.Property<int>("FinalStock")
                        .HasColumnType("int")
                        .HasColumnName("final_stock");

                    b.Property<int>("IncomingStock")
                        .HasColumnType("int")
                        .HasColumnName("incoming_stock");

                    b.Property<int>("InitialStock")
                        .HasColumnType("int")
                        .HasColumnName("initial_stock");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_id");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("order_type");

                    b.Property<int>("OutgoingStock")
                        .HasColumnType("int")
                        .HasColumnName("outgoing_stock");

                    b.Property<Guid?>("PackingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("packing_id");

                    b.Property<int>("RealStock")
                        .HasColumnType("int")
                        .HasColumnName("real_stock");

                    b.Property<int?>("Shortage")
                        .HasColumnType("int")
                        .HasColumnName("shortage");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.Property<Guid>("WarehouseControlId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("warehouse_control_id");

                    b.HasKey("Id");

                    b.HasIndex("BreadClassId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PackingId");

                    b.HasIndex("WarehouseControlId", "BreadClassId");

                    b.ToTable("warehouse_control_detail", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Warehouse.WarehouseControlEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("control_date");

                    b.Property<string>("ControlNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("control_number");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("LastClosingDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_closing_date");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("observations");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("ClosingDate");

                    b.HasIndex("ControlNumber")
                        .IsUnique();

                    b.ToTable("warehouse_control", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Warehouse.WarehouseMovementDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("BreadClassId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bread_class_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("MovementType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("movement_type");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("observations");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.Property<Guid>("WarehouseControlDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("warehouse_control_detail_id");

                    b.Property<Guid>("WarehouseMovementId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("warehouse_movement_id");

                    b.HasKey("Id");

                    b.HasIndex("BreadClassId");

                    b.HasIndex("WarehouseControlDetailId");

                    b.HasIndex("WarehouseMovementId", "BreadClassId");

                    b.ToTable("warehouse_movement_detail", "dbo");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Warehouse.WarehouseMovementEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MovementNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("movement_number");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("MovementDate");

                    b.HasIndex("MovementNumber")
                        .IsUnique();

                    b.ToTable("warehouse_movement", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.CustomerAssistantEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Administration.CustomerEntity", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.OrderDetailEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Production.BreadClassEntity", "BreadClass")
                        .WithMany("OrderDetails")
                        .HasForeignKey("BreadClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.Administration.OrderEntity", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BreadClass");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.OrderEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Administration.CustomerAssistantEntity", "Assistant")
                        .WithMany()
                        .HasForeignKey("AssistantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("panitab_backend.Database.Entities.Administration.CustomerEntity", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.Administration.OrderEntity", "ParentOrder")
                        .WithMany("refills")
                        .HasForeignKey("ParentOrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Assistant");

                    b.Navigation("Customer");

                    b.Navigation("ParentOrder");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.SupplierPaymentEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Administration.SupplierEntity", "Supplier")
                        .WithMany("SupplierPayments")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Packer.PackerPaymentEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Packer.PackerEntity", "Packer")
                        .WithMany("PackerPayments")
                        .HasForeignKey("PackerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Packer");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Packer.PackingDetailEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Production.BreadClassEntity", "BreadClass")
                        .WithMany()
                        .HasForeignKey("BreadClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.Packer.PackingEntity", "Packing")
                        .WithMany("PackingDetails")
                        .HasForeignKey("PackingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.Production.ProductionEntity", "Production")
                        .WithMany()
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BreadClass");

                    b.Navigation("Packing");

                    b.Navigation("Production");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Packer.PackingEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Packer.PackerEntity", null)
                        .WithMany("PackingDetails")
                        .HasForeignKey("PackerEntityId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Packer.PackingPackerEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Packer.PackerEntity", "Packer")
                        .WithMany("PackingPackers")
                        .HasForeignKey("PackerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.Packer.PackingDetailEntity", null)
                        .WithMany("PackingPackers")
                        .HasForeignKey("PackingDetailEntityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("panitab_backend.Database.Entities.Packer.PackingEntity", "Packing")
                        .WithMany("PackingPackers")
                        .HasForeignKey("PackingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Packer");

                    b.Navigation("Packing");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.BakerPaymentEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Production.BakerEntity", "Baker")
                        .WithMany("BakerPayments")
                        .HasForeignKey("BakerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Baker");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.BreadClassMaterialEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Production.BreadClassEntity", "BreadClass")
                        .WithMany("BreadClassMaterials")
                        .HasForeignKey("BreadClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.Production.MaterialEntity", "Material")
                        .WithMany("BreadClassMaterials")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BreadClass");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.MaterialPurchaseEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Production.MaterialEntity", "Material")
                        .WithMany("MaterialPurchases")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.Administration.SupplierEntity", "Supplier")
                        .WithMany("MaterialPurchases")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.ProductionDetailEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Production.BakerEntity", "Baker")
                        .WithMany("ProductionDetails")
                        .HasForeignKey("BakerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.Production.BreadClassEntity", "BreadClass")
                        .WithMany()
                        .HasForeignKey("BreadClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.Production.ProductionEntity", "Production")
                        .WithMany("ProductionDetails")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Baker");

                    b.Navigation("BreadClass");

                    b.Navigation("Production");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.UnitConversionEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Production.MaterialEntity", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Warehouse.WarehouseControlDetailEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Production.BreadClassEntity", "BreadClass")
                        .WithMany()
                        .HasForeignKey("BreadClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.Administration.OrderEntity", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("panitab_backend.Database.Entities.Packer.PackingEntity", "Packing")
                        .WithMany()
                        .HasForeignKey("PackingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("panitab_backend.Database.Entities.Warehouse.WarehouseControlEntity", "WarehouseControl")
                        .WithMany("WarehouseControlDetails")
                        .HasForeignKey("WarehouseControlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BreadClass");

                    b.Navigation("Order");

                    b.Navigation("Packing");

                    b.Navigation("WarehouseControl");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Warehouse.WarehouseMovementDetailEntity", b =>
                {
                    b.HasOne("panitab_backend.Database.Entities.Production.BreadClassEntity", "BreadClass")
                        .WithMany()
                        .HasForeignKey("BreadClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.Warehouse.WarehouseControlDetailEntity", "WarehouseControlDetail")
                        .WithMany("WarehouseMovementDetails")
                        .HasForeignKey("WarehouseControlDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("panitab_backend.Database.Entities.Warehouse.WarehouseMovementEntity", "WarehouseMovement")
                        .WithMany("WarehouseMovementDetails")
                        .HasForeignKey("WarehouseMovementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BreadClass");

                    b.Navigation("WarehouseControlDetail");

                    b.Navigation("WarehouseMovement");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.CustomerEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.OrderEntity", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("refills");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Administration.SupplierEntity", b =>
                {
                    b.Navigation("MaterialPurchases");

                    b.Navigation("SupplierPayments");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Packer.PackerEntity", b =>
                {
                    b.Navigation("PackerPayments");

                    b.Navigation("PackingDetails");

                    b.Navigation("PackingPackers");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Packer.PackingDetailEntity", b =>
                {
                    b.Navigation("PackingPackers");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Packer.PackingEntity", b =>
                {
                    b.Navigation("PackingDetails");

                    b.Navigation("PackingPackers");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.BakerEntity", b =>
                {
                    b.Navigation("BakerPayments");

                    b.Navigation("ProductionDetails");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.BreadClassEntity", b =>
                {
                    b.Navigation("BreadClassMaterials");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.MaterialEntity", b =>
                {
                    b.Navigation("BreadClassMaterials");

                    b.Navigation("MaterialPurchases");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Production.ProductionEntity", b =>
                {
                    b.Navigation("ProductionDetails");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Warehouse.WarehouseControlDetailEntity", b =>
                {
                    b.Navigation("WarehouseMovementDetails");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Warehouse.WarehouseControlEntity", b =>
                {
                    b.Navigation("WarehouseControlDetails");
                });

            modelBuilder.Entity("panitab_backend.Database.Entities.Warehouse.WarehouseMovementEntity", b =>
                {
                    b.Navigation("WarehouseMovementDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
